pipeline {
    agent any

stages {


      //백엔드
            stage('BE build') {

                steps {

                    dir('Server/webserver'){
                        sh '''
                        pwd
                        echo 'springboot build'
                        chmod +x gradlew
                        ./gradlew clean build -x test
                        '''
                    }
                }
            }


            stage('BE Dockerimage build') {

                steps {

                    dir('Server/webserver'){
                        sh '''
                        echo 'Dockerimage build'
                        docker build -t docker-springboot:0.0.1 .
                        '''
                    }
                }
            }


            stage('BE Deploy') {

                steps {

                    dir('Server/webserver'){

                        sh '''
                        echo 'Deploy'

                        result=$( docker container ls -a --filter "name=cyes_back" -q )
                        if [ -n "$result" ]; then
                                docker stop $result
                                docker rm $result

                            else
                                echo "No such containers"
                            fi
                        
                                echo "gogo"

                        docker images -f "dangling=true" -q | xargs -r docker rmi
                        '''
                    }
                }
            }


            //프론트 엔드
            stage('FE build') {
                steps {
                    dir('Front/cyesfront'){
                        sh '''
                            pwd
                            echo 'Frontend build'
                             DEBIAN_FRONTEND=noninteractive apt install -y npm

                            npm install
                            CI=false npm run build
                        '''
                    }
                }
            }
            stage('FE Dockerimage build') {
                steps {
                    dir('Front/cyesfront'){
                        sh '''
                            echo 'Dockerimage build'
                            docker build --no-cache -t cyes_front:0.0.1 .
                        '''
                    }
                }
            }
            stage('FE Deploy') {
                steps {
                    dir('Front/cyesfront'){

                        sh '''
                            echo 'FE Deploy'

                        result=$( docker container ls -a --filter "name=cyes_front" -q )
                        if [ -n "$result" ]; then
                                docker stop $result
                                docker rm $result

                            else
                                echo "No such containers"
                            fi

                        

                        echo "gogo"
                        docker images -f "dangling=true" -q | xargs -r docker rmi
                        '''
                    }
                }
            }


              stage('MSA Container backend') {
                    steps {
                        dir('/'){

                          script {
                    def fileName = 'spring-boot.tar'

                    // 파일이 존재하는지 확인
                    if (fileExists(fileName)) {
                        echo "Deleting ${fileName}"
                        // 파일 삭제
                        sh "rm ${fileName}"
                    } else {
                        echo "${fileName} does not exist. Skipping deletion."
                    }



                }


                sh '''
                        docker save -o spring-boot.tar docker-springboot:0.0.1

                        result=$(ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker container ls -a --filter 'name=cyes_back' -q")
                        if [ -n "$result" ]; then

                                ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "rm spring-boot.tar"
                                scp -i /jenkins_key /spring-boot.tar ubuntu@k9b103a.p.ssafy.io:/home/ubuntu
                                ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker stop cyes_back"
                                ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker rm cyes_back"
                                ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker rmi docker-springboot:0.0.1"

                            else
                                echo "No such containers"
                            fi

                            ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker load -i spring-boot.tar"
                            ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker run -d -p 127.0.0.1:5000:5000 -p 1026:5000 --name cyes_back -e JAVA_OPTS="-Duser.timezone=Asia/Seoul" docker-springboot:0.0.1"
                    '''
                        }

                        }
                    }

                 stage('MSA Container frontend') {
                    steps {
                        dir('/'){

                script {
                    def fileName = 'cyes_front.tar'

                    // 파일이 존재하는지 확인
                    if (fileExists(fileName)) {
                        echo "Deleting ${fileName}"
                        // 파일 삭제
                        sh "rm ${fileName}"
                    } else {
                        echo "${fileName} does not exist. Skipping deletion."
                    }

                }

                sh '''

                        docker save -o cyes_front.tar cyes_front:0.0.1


                            result=$(ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker container ls -a --filter 'name=cyes_front' -q")
                        if [ -n "$result" ]; then

                                ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "rm cyes_front.tar"
                                ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker stop cyes_front"
                                ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker rm cyes_front"
                                ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker rmi cyes_front:0.0.1"

                            else
                                echo "No such containers"
                            fi
                            scp -i /jenkins_key /cyes_front.tar ubuntu@k9b103a.p.ssafy.io:/home/ubuntu
                            ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker load -i cyes_front.tar"
                            ssh -i /jenkins_key ubuntu@k9b103a.p.ssafy.io "docker run -d -p 127.0.0.1:9510:80 --name cyes_front cyes_front:0.0.1"
                    '''
                        }

                        }
                    }
        }
    }
